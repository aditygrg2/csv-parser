{"ast":null,"code":"var _jsxFileName = \"/Users/aditygrg/Aditya - Web/csv-parser-mern-first/csv-parser/client/src/HomepageElements/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useImperativeHandle } from 'react';\nimport FileSubmitForm from './FileSubmitForm';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport WrapperHome from '../UI/WrapperHome';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [dataReceived, setDataReceived] = useState(false);\n  const [isFileOver, setFileOver] = useState(false);\n  const navigate = useNavigate();\n  const wrapperRef = useRef();\n  useImperativeHandle();\n  useEffect(() => {\n    if (dataReceived) {\n      navigate('/data', {\n        replace: true\n      });\n    }\n  }, [dataReceived, navigate]);\n  const button = /*#__PURE__*/_jsxDEV(Button, {\n    ref: wrapperRef,\n    type: \"submit\",\n    message: \"Import a CSV\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 18\n  }, this);\n  const fileOverHandler = e => {\n    e.preventDefault();\n    setFileOver(true);\n  };\n  const fileLeaveHandler = e => {\n    e.preventDefault();\n    setFileOver(false);\n  };\n  const fileDropHandler = async e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('file', e.dataTransfer.files[0]);\n\n    // axios.post takes an object and sends it to the backend server\n\n    const response = await axios.post(`/handleFile`, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n    if (response.data.status === 200) {\n      setDataReceived(true);\n    }\n    setFileOver(false);\n  };\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append('file', e.target[0].files[0]);\n\n    // axios.post takes an object and sends it to the backend server\n\n    const response = await axios.post(`/handleFile`, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n    if (response.data.status === 200) {\n      setDataReceived(true);\n    }\n  };\n  const wrapperClickHandler = () => {\n    console.log(wrapperRef);\n  };\n  return /*#__PURE__*/_jsxDEV(WrapperHome, {\n    wrapperClickHandler: wrapperClickHandler,\n    className: `w-3/6 bg-white h-1/2 rounded-3xl border-2 border-sky-500 border-dashed left-1/2 -translate-x-1/2 -translate-y-1/2 absolute top-1/2  ${isFileOver && 'bg-slate-400'}`,\n    fileDropHandler: fileDropHandler,\n    fileLeaveHandler: fileLeaveHandler,\n    fileOverHandler: fileOverHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center bg-white\",\n      children: \"Upload your Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center bg-white\",\n      children: \"Only CSV files are allowed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FileSubmitForm, {\n      className: \" bg-white\",\n      fileSubmitHandler: handleFileUpload,\n      button: button\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n}\n_s(Main, \"cb7hIqxewcZ5fwTdD6xTP0EJes0=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useImperativeHandle","FileSubmitForm","axios","useNavigate","WrapperHome","Button","Main","dataReceived","setDataReceived","isFileOver","setFileOver","navigate","wrapperRef","replace","button","fileOverHandler","e","preventDefault","fileLeaveHandler","fileDropHandler","formData","FormData","append","dataTransfer","files","response","post","headers","data","status","handleFileUpload","target","wrapperClickHandler","console","log"],"sources":["/Users/aditygrg/Aditya - Web/csv-parser-mern-first/csv-parser/client/src/HomepageElements/Main.js"],"sourcesContent":["import React,{useState, useEffect, useRef, useImperativeHandle} from 'react'\nimport FileSubmitForm from './FileSubmitForm'\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\nimport WrapperHome from '../UI/WrapperHome'\nimport Button from '../UI/Button'\n\nexport default function Main() {\n  const[dataReceived, setDataReceived] = useState(false);\n  const [isFileOver, setFileOver] = useState(false);\n  const navigate = useNavigate();\n  const wrapperRef = useRef();\n\n  useImperativeHandle()\n  \n  useEffect(()=>{\n    if(dataReceived){\n      navigate('/data',{replace:true})\n    }\n  },[dataReceived, navigate])\n  \n  const button = <Button ref={wrapperRef} type=\"submit\" message=\"Import a CSV\"></Button>;\n  \n  const fileOverHandler = (e) => {\n    e.preventDefault();\n    setFileOver(true);\n  }\n\n  const fileLeaveHandler =  (e) => {\n    e.preventDefault();\n\n    setFileOver(false);\n  }\n\n  const fileDropHandler = async (e) => {\n    e.preventDefault();\n\n    let formData = new FormData();\n    formData.append('file', e.dataTransfer.files[0]);\n\n    // axios.post takes an object and sends it to the backend server\n\n    const response = await axios.post(`/handleFile`,\n        formData\n    ,{\n      headers:{\n        'content-type': 'multipart/form-data'\n      }\n    })\n\n    if(response.data.status===200){\n      setDataReceived(true); \n    }\n\n    setFileOver(false);\n\n  }\n\n  const handleFileUpload = async (e) => {\n    e.preventDefault();\n\n    let formData = new FormData();\n    formData.append('file', e.target[0].files[0]);\n    \n\n    // axios.post takes an object and sends it to the backend server\n\n    const response = await axios.post(`/handleFile`,\n        formData\n    ,{\n      headers:{\n        'content-type': 'multipart/form-data'\n      }\n    })\n\n    if(response.data.status===200){\n      setDataReceived(true); \n    }\n\n  }\n\n  const wrapperClickHandler = () => {\n    console.log(wrapperRef);\n  }\n\n  return (\n      <WrapperHome wrapperClickHandler={wrapperClickHandler} className={`w-3/6 bg-white h-1/2 rounded-3xl border-2 border-sky-500 border-dashed left-1/2 -translate-x-1/2 -translate-y-1/2 absolute top-1/2  ${isFileOver && 'bg-slate-400'}`} fileDropHandler={fileDropHandler} fileLeaveHandler={fileLeaveHandler} fileOverHandler={fileOverHandler}>\n          <h1 className='text-center bg-white'>Upload your Files</h1>\n          <p className='text-center bg-white'>Only CSV files are allowed</p>\n          <FileSubmitForm className=\" bg-white\" fileSubmitHandler={handleFileUpload} button={button}></FileSubmitForm>\n      </WrapperHome>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,mBAAmB,QAAO,OAAO;AAC5E,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,MAAM,MAAM,cAAc;AAAA;AAEjC,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B,MAAK,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAACY,UAAU,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMc,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,UAAU,GAAGb,MAAM,EAAE;EAE3BC,mBAAmB,EAAE;EAErBF,SAAS,CAAC,MAAI;IACZ,IAAGS,YAAY,EAAC;MACdI,QAAQ,CAAC,OAAO,EAAC;QAACE,OAAO,EAAC;MAAI,CAAC,CAAC;IAClC;EACF,CAAC,EAAC,CAACN,YAAY,EAAEI,QAAQ,CAAC,CAAC;EAE3B,MAAMG,MAAM,gBAAG,QAAC,MAAM;IAAC,GAAG,EAAEF,UAAW;IAAC,IAAI,EAAC,QAAQ;IAAC,OAAO,EAAC;EAAc;IAAA;IAAA;IAAA;EAAA,QAAU;EAEtF,MAAMG,eAAe,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAClBP,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMQ,gBAAgB,GAAKF,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,EAAE;IAElBP,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMS,eAAe,GAAG,MAAOH,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIG,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,CAAC,CAACO,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAEhD;;IAEA,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAE,aAAY,EAC3CN,QAAQ,EACX;MACCO,OAAO,EAAC;QACN,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM,KAAG,GAAG,EAAC;MAC5BrB,eAAe,CAAC,IAAI,CAAC;IACvB;IAEAE,WAAW,CAAC,KAAK,CAAC;EAEpB,CAAC;EAED,MAAMoB,gBAAgB,GAAG,MAAOd,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIG,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,CAAC,CAACe,MAAM,CAAC,CAAC,CAAC,CAACP,KAAK,CAAC,CAAC,CAAC,CAAC;;IAG7C;;IAEA,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAE,aAAY,EAC3CN,QAAQ,EACX;MACCO,OAAO,EAAC;QACN,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM,KAAG,GAAG,EAAC;MAC5BrB,eAAe,CAAC,IAAI,CAAC;IACvB;EAEF,CAAC;EAED,MAAMwB,mBAAmB,GAAG,MAAM;IAChCC,OAAO,CAACC,GAAG,CAACtB,UAAU,CAAC;EACzB,CAAC;EAED,oBACI,QAAC,WAAW;IAAC,mBAAmB,EAAEoB,mBAAoB;IAAC,SAAS,EAAG,uIAAsIvB,UAAU,IAAI,cAAe,EAAE;IAAC,eAAe,EAAEU,eAAgB;IAAC,gBAAgB,EAAED,gBAAiB;IAAC,eAAe,EAAEH,eAAgB;IAAA,wBAC5U;MAAI,SAAS,EAAC,sBAAsB;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC3D;MAAG,SAAS,EAAC,sBAAsB;MAAA,UAAC;IAA0B;MAAA;MAAA;MAAA;IAAA,QAAI,eAClE,QAAC,cAAc;MAAC,SAAS,EAAC,WAAW;MAAC,iBAAiB,EAAEe,gBAAiB;MAAC,MAAM,EAAEhB;IAAO;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QAClG;AAEpB;AAAC,GArFuBR,IAAI;EAAA,QAGTH,WAAW;AAAA;AAAA,KAHNG,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}